[alias]
    # Base commands
    cm = commit -m # Commit with message
    a = add -p # Stage chunks of code
    st = status -sb # Status short output
    ds = diff --staged # Show diff of staged files/chunks
    co = checkout
    f = fetch -pt # Include tags in remote fetch and prune deleted remote branches
    p = pull --rebase --autostash

    # History housekeeping
    # Source : https://fle.github.io/git-tip-keep-your-branch-clean-with-fixup-and-autosquash.html
    ca = commit --amend # Amends last commit (change msg/add new files)
    cf = commit --fixup # Amends a given commit (by hash)
    rb = rebase -i --autostash --autosquash # Interactive rebase with automatic clean of fixup and squashes
    reold ="!git rebase -i --autostash --autosquash origin/$(git rev-parse --abbrev-ref HEAD); git rebase --committer-date-is-author-date --autostash origin/$(git rev-parse --abbrev-ref HEAD)"
    # Repo housekeeping
    cleanup = "!git fetch -p && for branch in `git branch -vv | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done" # Remove local branches that no longer exist on the remote
    ll = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit # Compact log display
[core]
    autocrlf = input
[push]
    default = current
[merge]
    conflictstyle = diff3
    renamelimit = 25000
[color]
    diff = true
    status = auto
    branch = auto
    interactive = true
    ui = true
    pager = true
[rerere]
    enabled = true
[user]
    name = Jean-Eudes Peloye
    email = peloye.je@gmail.com
[pull]
    rebase = true
